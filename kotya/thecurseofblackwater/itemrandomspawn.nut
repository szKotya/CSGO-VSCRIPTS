////////////////////////////////////////////////////////////////////
//Script by Kotya[STEAM_1:1:124348087]
//update 13.07 version 0.98b
////////////////////////////////////////////////////////////////////

SpawnPosPosLevelOne <- [
"4874 56 118", //0
"4894 56 68", //1
"5238 -1304 118", //2
"5238 -1304 68", //3
"5932 -1304 118", //4
"5932 -1304 68",  //5
"6448 -1304 118",  //6
"6468 -1304 68",  //7
"7223 -1074 118",  //8
"7223 -1094 68",  //9
"7928 -504 118",  //10
"7928 -504 68",  //11
"7908 26 118",  //12
"7928 26 118",  //13
"8053 158 68",  //14
"8053 138 118",  //15
"8053 1471 68",  //16
"8053 1451 68",  //17
"7908 2226 118",  //18
"7928 2226 68",  //19
"7783 2701 118",  //20
"7783 2681 118",  //21
"7283 2961 118",  //22
"7283 2961 68",  //23
"6163 2941 118",  //24
"6163 2961 68",  //25
"5238 2816 68",  //26
"5218 2816 68",  //27
"4978 2256 118",  //28
"4978 2256 68",  //29
"4978 1256 118",  //30
"4958 1256 68"  //31
"4894 56 118",  //30
"4874 56 68",  //31
"5258 -1304 118",  //32
"5258 -1304 68",  //33
"5912 -1304 118",  //34
"5912 -1304 68",  //35
"6468 -1304 118",  //36
"6448 -1304 68",  //37
"7223 -1094 118",  //38
"7223 -1074 68",  //39
"7908 -504 118",  //40
"7908 -504 68",  //41
"7908 26 68",  //42
"7928 26 68",  //43
"8053 158 118",  //44
"8053 138 68",  //45
"8053 1471 118",  //46
"8053 1451 118",  //47
"7928 2226 118",  //48
"7908 2226 68",  //49
"7783 2681 68",  //50
"7783 2701 68",  //51
"7283 2941 118",  //52
"7283 2941 68",  //53
"6163 2961 118",  //54
"6163 2941 68",  //55
"5238 2816 118",  //56
"5218 2816 118",  //57
"4958 2256 118",  //58
"4958 2256 68",  //59
"4958 1256 118",  //60
"4978 1256 68",  //61
"8613 1445 194",  //62
"8613 1425 194",  //63
"8613 1425 169",  //64
"8613 1445 169",  //65
"9193 -700 298",  //66
"9193 -680 298",  //67
"9193 -700 249",  //68
"9193 -680 249",  //69
"10446 -1563 298",  //70
"10426 -1563 298",  //71
"10446 -1563 249",  //72
"10426 -1563 249",  //73
"11283 -678 298",  //74
"11283 -698 298",  //75
"11283 -678 249",  //76
"11283 -698 249",  //77
"11283 633 298",  //78
"11283 613 298",  //79
"11283 633 249",  //80
"11283 613 249",  //81
"10421 1649 298",  //82
"10401 1649 298",  //83
"10421 1649 249",  //84
"10401 1649 249",  //85
"9299 1159 298",  //86
"9319 1159 298",  //87
"9299 1159 249",  //88
"9319 1159 249"  //89
];
SpawnPosPosLevelTwo <- [
"-10741 -6051 -3724",
"-10761 -6051 -3724",
"-10741 -6051 -3774",
"-10761 -6051 -3774",
"-11190 -6321 -3724",
"-11210 -6321 -3724",
"-11190 -6321 -3774",
"-11210 -6321 -3774",
"-11311 -6321 -3724",
"-11290 -6321 -3724",
"-11290 -6321 -3774",
"-11311 -6321 -3774",
"-11386 -6321 -3724",
"-11406 -6321 -3724",
"-11386 -6321 -3774",
"-11406 -6321 -3774",
"-11515 -5841 -3724",
"-11515 -5821 -3724",
"-11515 -5841 -3774",
"-11515 -5821 -3774",
"-11515 -6041 -3724",
"-11515 -6041 -3774",
"-11515 -6021 -3724",
"-11515 -6021 -3774",
"-11905 -6237 -3724",
"-11905 -6257 -3724",
"-11905 -6237 -3774",
"-11905 -6257 -3774",
"-12132 -6321 -3724",
"-12132 -6321 -3774",
"-12152 -6321 -3724",
"-12152 -6321 -3774",
"-12231 -6321 -3724",
"-12231 -6321 -3774",
"-12251 -6321 -3724",
"-12251 -6321 -3774",
"-12321 -6321 -3724",
"-12321 -6321 -3774",
"-12341 -6321 -3724",
"-12341 -6321 -3774",
"-12444 -6213 -3724",
"-12444 -6213 -3774",
"-12444 -6193 -3724",
"-12444 -6193 -3774",
"-12445 -6068 -3724",
"-12445 -6068 -3774",
"-12445 -6048 -3724",
"-12445 -6048 -3774",
"-12445 -5843 -3724",
"-12445 -5843 -3774",
"-12445 -5823 -3724",
"-12445 -5823 -3774",
"-12210 -5711 -3724",
"-12210 -5711 -3774",
"-12190 -5711 -3724",
"-12190 -5711 -3774",
"-11905 -5782 -3724",
"-11905 -5782 -3774",
"-11905 -5802 -3724",
"-11905 -5802 -3774",
"-11975 -5231 -3724",
"-11975 -5231 -3774",
"-11975 -5211 -3724",
"-11975 -5211 -3774",
"-11975 -5161 -3724",
"-11975 -5161 -3774",
"-11975 -5141 -3724",
"-11975 -5141 -3774",
"-11900 -5081 -3724",
"-11900 -5081 -3774",
"-11880 -5081 -3724",
"-11880 -5081 -3774",
"-11615 -5231 -3724",
"-11615 -5231 -3774",
"-11615 -5211 -3724",
"-11615 -5211 -3774",
"-11615 -5161 -3724",
"-11615 -5161 -3774",
"-11615 -5141 -3724",
"-11615 -5141 -3774",
"-11540 -5081 -3724",
"-11540 -5081 -3774",
"-11520 -5081 -3724",
"-11520 -5081 -3774",
"-11520 -5081 -3774",
"-11145 -6651 -3774",
"-11145 -6671 -3724",
"-11145 -6671 -3774",
"-11240 -6731 -3724",
"-11240 -6731 -3774",
"-11260 -6731 -3724",
"-11260 -6731 -3774",
"-11351 -6731 -3724",
"-11351 -6731 -3774",
"-11371 -6731 -3724",
"-11371 -6731 -3774",
"-12042 -6731 -3724",
"-12042 -6731 -3774",
"-12062 -6731 -3724",
"-12062 -6731 -3774",
"-12153 -6731 -3724",
"-12153 -6731 -3774",
"-12173 -6731 -3724",
"-12173 -6731 -3774",
"-12275 -6671 -3724",
"-12275 -6671 -3774",
"-12275 -6651 -3724",
"-12275 -6651 -3774",
"-10976 -7471 -3724",
"-10976 -7471 -3774",
"-10956 -7471 -3724",
"-10956 -7471 -3774",
"-10727 -7471 -3724",
"-10727 -7471 -3774",
"-10707 -7471 -3724",
"-10707 -7471 -3774",
"-10655 -7960 -3724",
"-10655 -7960 -3774",
"-10655 -7980 -3724",
"-10655 -7980 -3774",
"-10744 -8041 -3724",
"-10744 -8041 -3774",
"-10764 -8041 -3724",
"-10764 -8041 -3774",
"-10929 -8041 -3724",
"-10929 -8041 -3774",
"-10949 -8041 -3724",
"-10949 -8041 -3774",
"-11253 -7671 -3724",
"-11253 -7671 -3774",
"-11233 -7671 -3724",
"-11233 -7671 -3774",
"-11433 -7671 -3724",
"-11433 -7671 -3774",
"-11413 -7671 -3724",
"-11413 -7671 -3774",
"-11848 -7841 -3724",
"-11848 -7841 -3774",
"-11868 -7841 -3724",
"-11868 -7841 -3774",
"-12253 -7671 -3724",
"-12253 -7671 -3774",
"-12233 -7671 -3724",
"-12233 -7671 -3774",
"-12688 -7671 -3724",
"-12688 -7671 -3774",
"-12668 -7671 -3724",
"-12668 -7671 -3774",
"-12868 -7671 -3724",
"-12868 -7671 -3774",
"-12848 -7671 -3724",
"-12848 -7671 -3774",
"-13035 -7834 -3724",
"-13035 -7834 -3774",
"-13035 -7814 -3724",
"-13035 -7814 -3774",
"-12848 -7841 -3724",
"-12848 -7841 -3774",
"-12868 -7841 -3724",
"-12868 -7841 -3774",
"-12668 -7841 -3724",
"-12668 -7841 -3774",
"-12688 -7841 -3724",
"-12040 -8369 -3585",
"-12060 -8369 -3585",
"-12040 -8369 -3635",
"-12060 -8369 -3635",
"-12060 -7141 -3585",
"-12060 -7141 -3635",
"-12040 -7141 -3585",
"-12040 -7141 -3635",
"-12905 -8055 -3724",
"-12905 -8055 -3774",
"-12905 -8035 -3724",
"-12905 -8035 -3774",
"-12905 -8458 -3724",
"-12905 -8458 -3774",
"-12905 -8438 -3724",
"-12905 -8438 -3774",
"-12795 -8571 -3724",
"-12795 -8571 -3774",
"-12815 -8571 -3724",
"-12815 -8571 -3774",
"-12306 -8571 -3724",
"-12326 -8571 -3724",
"-12306 -8571 -3774",
"-12326 -8571 -3774",
"-12195 -8377 -3724",
"-12195 -8377 -3774",
"-12195 -8397 -3724",
"-12195 -8397 -3774",
"-12195 -8294 -3724",
"-12195 -8294 -3774",
"-12195 -8314 -3724",
"-12195 -8314 -3774",
"-12195 -8147 -3724",
"-12195 -8147 -3774",
"-12195 -8167 -3724",
"-12195 -8167 -3774",
"-12195 -8076 -3724",
"-12195 -8076 -3774",
"-12195 -8096 -3724",
"-12195 -8096 -3774",
"-12905 -7489 -3724",
"-12905 -7489 -3774",
"-12905 -7469 -3724",
"-12905 -7469 -3774",
"-12905 -7072 -3724",
"-12905 -7072 -3774",
"-12905 -7052 -3724",
"-12905 -7052 -3774",
"-12801 -6941 -3724",
"-12801 -6941 -3774",
"-12781 -6941 -3724",
"-12781 -6941 -3774",
"-12312 -6941 -3724",
"-12312 -6941 -3774",
"-12292 -6941 -3724",
"-12292 -6941 -3774",
"-12195 -7152 -3724",
"-12195 -7152 -3774",
"-12195 -7172 -3724",
"-12195 -7172 -3774",
"-12195 -7224 -3724",
"-12195 -7224 -3774",
"-12195 -7293 -3724",
"-12195 -7293 -3774",
"-12195 -7313 -3724",
"-12195 -7313 -3774",
"-12195 -7361 -3724",
"-12195 -7381 -3724",
"-12195 -7361 -3774",
"-12195 -7381 -3774",
"-11905 -7454 -3724",
"-11905 -7454 -3774",
"-11905 -7434 -3724",
"-11905 -7434 -3774",
"-11905 -7318 -3724",
"-11905 -7318 -3774",
"-11905 -7298 -3724",
"-11905 -7298 -3774",
"-11905 -7233 -3724",
"-11905 -7233 -3774",
"-11905 -7213 -3724",
"-11905 -7213 -3774",
"-11905 -7093 -3724",
"-11905 -7093 -3774",
"-11905 -7073 -3724",
"-11905 -7073 -3774",
"-11801 -6941 -3724",
"-11801 -6941 -3774",
"-11781 -6941 -3724",
"-11781 -6941 -3774",
"-11327 -6941 -3724",
"-11327 -6941 -3774",
"-11307 -6941 -3724",
"-11307 -6941 -3774",
"-11195 -7087 -3724",
"-11195 -7087 -3774",
"-11195 -7107 -3724",
"-11195 -7107 -3774",
"-11195 -7440 -3724",
"-11195 -7440 -3774",
"-11195 -7460 -3724",
"-11195 -7460 -3774",
"-11195 -8031 -3724",
"-11195 -8031 -3774",
"-11195 -8051 -3724",
"-11195 -8051 -3774",
"-11195 -8426 -3724",
"-11195 -8426 -3774",
"-11195 -8446 -3724",
"-11195 -8446 -3774",
"-11299 -8571 -3724",
"-11299 -8571 -3774",
"-11319 -8571 -3724",
"-11319 -8571 -3774",
"-11786 -8571 -3724",
"-11786 -8571 -3774",
"-11806 -8571 -3724",
"-11806 -8571 -3774",
"-11905 -8443 -3724",
"-11905 -8443 -3774",
"-11905 -8423 -3724",
"-11905 -8423 -3774",
"-11905 -8357 -3724",
"-11905 -8357 -3774",
"-11905 -8337 -3724",
"-11905 -8337 -3774",
"-11905 -8250 -3724",
"-11905 -8250 -3774",
"-11905 -8230 -3724",
"-11905 -8230 -3774",
"-11905 -8107 -3724",
"-11905 -8107 -3774",
"-11905 -8087 -3724",
"-11905 -8087 -3774",
"-8197 -7411 -3724",
"-8197 -7411 -3774",
"-8217 -7411 -3724",
"-8217 -7411 -3774",
"-7840 -7411 -3724",
"-7840 -7411 -3774",
"-7860 -7411 -3724",
"-7860 -7411 -3774",
"-7496 -7411 -3724",
"-7496 -7411 -3774",
"-7516 -7411 -3724",
"-7516 -7411 -3774",
"-7422 -7411 -3724",
"-7422 -7411 -3774",
"-7442 -7411 -3724",
"-7442 -7411 -3774",
"-6994 -7411 -3724",
"-6994 -7411 -3774",
"-7014 -7411 -3724",
"-7014 -7411 -3774",
"-6653 -7411 -3724",
"-6653 -7411 -3774",
"-6673 -7411 -3724",
"-6673 -7411 -3774",
"-6377 -7411 -3724",
"-6377 -7411 -3774",
"-6397 -7411 -3724",
"-6397 -7411 -3774",
"-5815 -7265 -3724",
"-5815 -7265 -3774",
"-5815 -7285 -3724",
"-5815 -7285 -3774",
"-5994 -6441 -3585",
"-5994 -6441 -3635",
"-5974 -6441 -3585",
"-5974 -6441 -3635",
"-6845 -6947 -3724",
"-6845 -6947 -3774",
"-6845 -6927 -3724",
"-6845 -6927 -3774",
"-6575 -6700 -3724",
"-6575 -6700 -3774",
"-6575 -6720 -3724",
"-6575 -6720 -3774",
"-6752 -6241 -3724",
"-6752 -6241 -3774",
"-6732 -6241 -3724",
"-6732 -6241 -3774",
"-7684 -6241 -3724",
"-7684 -6241 -3774",
"-7664 -6241 -3724",
"-7664 -6241 -3774",
"-7535 -6734 -3724",
"-7535 -6754 -3724",
"-7535 -6734 -3774",
"-7535 -6754 -3774",
"-7535 -6933 -3724",
"-7535 -6933 -3774",
"-7535 -6953 -3724",
"-7535 -6953 -3774",
"-8241 -6441 -3585",
"-8241 -6441 -3635",
"-8221 -6441 -3585",
"-8221 -6441 -3635",
"-8347 -6571 -3724",
"-8347 -6571 -3774",
"-8327 -6571 -3724",
"-6732 -6241 -3774",
"-7684 -6241 -3724",
"-7684 -6241 -3774",
"-7664 -6241 -3724",
"-7664 -6241 -3774",
"-7535 -6734 -3724",
"-7535 -6754 -3724",
"-7535 -6734 -3774",
"-7535 -6754 -3774",
"-7535 -6933 -3724",
"-7535 -6933 -3774",
"-7535 -6953 -3724",
"-7535 -6953 -3774",
"-8241 -6441 -3585",
"-8241 -6441 -3635",
"-8221 -6441 -3585",
"-8221 -6441 -3635",
"-8347 -6571 -3724",
"-8347 -6571 -3774",
"-8327 -6571 -3724",
"-8327 -6571 -3774",
"8110 -6571 -3724",
"-8110 -6571 -3774",
"-8090 -6571 -3724",
"-8090 -6571 -3774",
"-8045 -6571 -3724",
"-8045 -6571 -3774",
"-8025 -6571 -3724",
"-8025 -6571 -3774",
"-6905 -6631 -3724",
"-6905 -6631 -3774",
"-6905 -6651 -3724",
"-6905 -6651 -3774",
"-6905 -6696 -3724",
"-6905 -6696 -3774",
"-6905 -6716 -3724",
"-6905 -6716 -3774",
"-7581 -8101 -3724",
"-7581 -8101 -3774",
"-7561 -8101 -3724",
"-7561 -8101 -3774",
"-7511 -8101 -3724",
"-7511 -8101 -3774",
"-7491 -8101 -3724",
"-7491 -8101 -3774",
"-7665 -8783 -3724",
"-7665 -8783 -3774",
"-7665 -8763 -3724",
"-7665 -8763 -3774",
"-6068 -9211 -3724",
"-6068 -9211 -3774",
"-6088 -9211 -3724",
"-6088 -9211 -3774",
"-6132 -9211 -3724",
"-6132 -9211 -3774",
"-6152 -9211 -3724",
"-6152 -9211 -3774",
"-6145 -8809 -3724",
"-6145 -8809 -3774",
"-6145 -8829 -3724",
"-6145 -8829 -3774",
"-6542 -8881 -3724",
"-6542 -8881 -3774",
"-6562 -8881 -3724",
"-6562 -8881 -3774",
"-6475 -8431 -3724",
"-6475 -8431 -3774",
"-6455 -8431 -3724",
"-6455 -8431 -3774",
"-6410 -8431 -3724",
"-6410 -8431 -3724",
"-6390 -8431 -3724",
"-6390 -8431 -3774",
"-6345 -8431 -3724",
"-6345 -8431 -3774",
"-6325 -8431 -3724",
"-6325 -8431 -3774",
"-7082 -8721 -3724",
"-7082 -8721 -3774",
"-7102 -8721 -3724",
"-7102 -8721 -3774",
"-8235 -8780 -3724",
"-8235 -8780 -3774",
"-8235 -8760 -3724",
"-8235 -8760 -3774",
"-8235 -8465 -3724",
"-8235 -8465 -3774",
"-8235 -8445 -3724",
"-8235 -8445 -3774",
"-8089 -8431 -3724",
"-8089 -8431 -3774",
"-8069 -8431 -3724",
"-8069 -8431 -3774",
"-8024 -8431 -3724",
"-8024 -8431 -3774",
"-8004 -8431 -3724",
"-8004 -8431 -3774",
"-7954 -8431 -3724",
"-7954 -8431 -3774",
"-7934 -8431 -3724",
"-7934 -8431 -3774",
"-7889 -8431 -3724",
"-7889 -8431 -3774",
"-7869 -8431 -3724",
"-7869 -8431 -3774",
"-7725 -8809 -3724",
"-7725 -8809 -3774",
"-7725 -8829 -3724",
"-7725 -8829 -3774",
"-8125 -9476 -3724",
"-8125 -9476 -3774",
"-8125 -9496 -3724",
"-8125 -9496 -3774",
"-8125 -9685 -3724",
"-8125 -9685 -3774",
"-8125 -9705 -3724",
"-8125 -9705 -3774",
"-7395 -9359 -3724",
"-7395 -9359 -3774",
"-7395 -9379 -3724",
"-7395 -9379 -3774",
"-5815 -9334 -3724",
"-5815 -9334 -3774",
"-5815 -9354 -3724",
"-5815 -9354 -3774",
"-5815 -9422 -3724",
"-5815 -9422 -3774",
"-5815 -9442 -3724",
"-5815 -9442 -3774",
"-6255 -9721 -3724",
"-6255 -9721 -3774",
"-6255 -9701 -3724",
"-6255 -9701 -3774",
"-6255 -9631 -3724",
"-6255 -9631 -3774",
"-6255 -9611 -3724",
"-6255 -9611 -3774"
];
SpawnPosPosLevelThree <- [
"4793 -15123 -8576",
"4773 -15123 -8576",
"4793 -15123 -8625",
"4773 -15123 -8625",
"2808 -15123 -8576",
"2808 -15123 -8625",
"2788 -15123 -8576",
"2788 -15123 -8625",
"823 -15123 -8576",
"823 -15123 -8625",
"803 -15123 -8576",
"803 -15123 -8625",
"528 -14848 -8576",
"528 -14848 -8625",
"528 -14828 -8576",
"528 -14828 -8625",
"528 -13173 -8576",
"528 -13173 -8625",
"528 -13153 -8576",
"528 -13153 -8625",
"528 -11498 -8576",
"528 -11498 -8625",
"528 -11478 -8576",
"528 -11478 -8625",
"803 -11203 -8576",
"803 -11203 -8625",
"823 -11203 -8576",
"823 -11203 -8625",
"1908 -11203 -8576",
"1908 -11203 -8625",
"1928 -11203 -8576",
"1928 -11203 -8625",
"3668 -11203 -8576",
"3668 -11203 -8625",
"3688 -11203 -8576",
"3688 -11203 -8625",
"4773 -11203 -8576",
"4773 -11203 -8625",
"4793 -11203 -8576",
"4793 -11203 -8625",
"5068 -11478 -8576",
"5068 -11478 -8625",
"5068 -11498 -8576",
"5068 -11498 -8625",
"5068 -13153 -8576",
"5068 -13153 -8625",
"5068 -13173 -8576",
"5068 -13173 -8625",
"4038 -14553 -8576",
"4038 -14553 -8625",
"4058 -14553 -8576",
"4058 -14553 -8625",
"3233 -14553 -8576",
"3233 -14553 -8625",
"3253 -14553 -8576",
"3253 -14553 -8625",
"2361 -14553 -8576",
"2361 -14553 -8625",
"2381 -14553 -8576",
"2381 -14553 -8625",
"1415 -14553 -8576",
"1415 -14553 -8625",
"1435 -14553 -8576",
"1435 -14553 -8625",
"1098 -14233 -8576",
"1098 -14253 -8576",
"1098 -14233 -8625",
"1098 -14253 -8625",
"1098 -13541 -8576",
"1098 -13541 -8625",
"1098 -13561 -8576",
"1098 -13561 -8625",
"1098 -12881 -8576",
"1098 -12881 -8625",
"1098 -12901 -8576",
"1098 -12901 -8625",
"1098 -12133 -8576",
"1098 -12133 -8625",
"1098 -12153 -8576",
"1098 -12153 -8625",
"1450 -11773 -8576",
"1450 -11773 -8625",
"1430 -11773 -8576",
"1430 -11773 -8625",
"2343 -11773 -8576",
"2343 -11773 -8625",
"2323 -11773 -8576",
"2323 -11773 -8625",
"2808 -11773 -8576",
"2808 -11773 -8625",
"2788 -11773 -8576",
"2788 -11773 -8625",
"2513 -10718 -8576",
"2513 -10718 -8625",
"2513 -10698 -8576",
"2513 -10698 -8625",
"3083 -10698 -8576",
"3083 -10698 -8625",
"3083 -10718 -8576",
"3083 -10718 -8625",
"3363 -11773 -8576",
"3363 -11773 -8625",
"3343 -11773 -8576",
"3343 -11773 -8625",
"4255 -11773 -8576",
"4255 -11773 -8625",
"4235 -11773 -8576",
"4235 -11773 -8625",
"4498 -12063 -8576",
"4498 -12063 -8625",
"4498 -12043 -8576",
"4498 -12043 -8625",
"4498 -12668 -8576",
"4498 -12668 -8625",
"4498 -12648 -8576",
"4498 -12648 -8625",
"4498 -13173 -8576",
"4498 -13173 -8625",
"4498 -13153 -8576",
"4498 -13153 -8625",
"4498 -13775 -8576",
"4498 -13775 -8625",
"4498 -13755 -8576",
"4498 -13755 -8625",
"4498 -14309 -8576",
"4498 -14309 -8625",
"4498 -14289 -8576",
"4498 -14289 -8625",
"4168 -14153 -8576",
"4168 -14153 -8625",
"4168 -14173 -8576",
"4168 -14173 -8625",
"3743 -13793 -8576",
"3743 -13793 -8625",
"3763 -13793 -8576",
"3763 -13793 -8625",
"3468 -13943 -8576",
"3468 -13943 -8625",
"3468 -13923 -8576",
"3468 -13923 -8625",
"3468 -13873 -8576",
"3468 -13873 -8625",
"3468 -13853 -8576",
"3468 -13853 -8625",
"3380 -12703 -8576",
"3380 -12703 -8625",
"3400 -12703 -8576",
"3400 -12703 -8625",
"3454 -12703 -8576",
"3454 -12703 -8625",
"3474 -12703 -8576",
"3474 -12703 -8625",
"4013 -12493 -8576",
"4013 -12493 -8625",
"3993 -12493 -8576",
"3993 -12493 -8625",
"3935 -12493 -8576",
"3935 -12493 -8625",
"3915 -12493 -8576",
"3915 -12493 -8625",
"3871 -12493 -8576",
"3871 -12493 -8625",
"3851 -12493 -8576",
"3851 -12493 -8625",
"2861 -13003 -8576",
"2861 -13003 -8576",
"2881 -13003 -8576",
"2881 -13003 -8625",
"2508 -13003 -8576",
"2508 -13003 -8625",
"2528 -13003 -8576",
"2528 -13003 -8625",
"2088 -13104 -8576",
"2088 -13104 -8625",
"2088 -13084 -8576",
"2088 -13084 -8625",
"2088 -13241 -8576",
"2088 -13241 -8625",
"2088 -13221 -8576",
"2088 -13221 -8625",
"2307 -13583 -8576",
"2307 -13583 -8625",
"2287 -13583 -8576",
"2287 -13583 -8625",
"2167 -13583 -8576",
"2167 -13583 -8625",
"2147 -13583 -8576",
"2147 -13583 -8625",
"1608 -13523 -8576",
"1608 -13523 -8625",
"1608 -13503 -8576",
"1608 -13503 -8625",
"1608 -13411 -8576",
"1608 -13411 -8625",
"1608 -13391 -8576",
"1608 -13391 -8625",
"1647 -13003 -8576",
"1647 -13003 -8625",
"1667 -13003 -8576",
"1667 -13003 -8625",
"1719 -13003 -8576",
"1719 -13003 -8625",
"1739 -13003 -8576",
"1739 -13003 -8625",
"2238 -13885 -8576",
"2238 -13885 -8625",
"2238 -13865 -8576",
"2238 -13865 -8625",
"2313 -14223 -8576",
"2313 -14223 -8625",
"2293 -14223 -8576",
"2293 -14223 -8625",
"2688 -13708 -8576",
"2688 -13708 -8625",
"2688 -13688 -8576",
"2688 -13688 -8625",
"2937 -12943 -8576",
"2937 -12943 -8625",
"2917 -12943 -8576",
"2917 -12943 -8625"
];

debag <- false;
SpawnBatteryCount <- 3; //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во
SpawnHealCount <- 3; //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во

SpawnChanceDef <-10; //Стандартный шанс появления материи
SpawnChance <-0; //Всомогательная переменная
MultiChance <-10; //Шанс увеличения что материя заспавнится если не заспавнилась

MaxSpawnBattery <- 0; //Макс кол-во Б. которое может заспавнится, ниже менять для каждого уровня 
MaxSpawnHeal <- 0 //Макс кол-во Х. которое может заспавнится, ниже менять для каждого уровня  

function StartSpawn(Level)   //Вызов теперь через StartSpawn(уровень) 
{
  switch (Level)
  {
    case 1:  //Первый уровень
    {
      SpawnChanceDef = 10;    //Стандартный шанс появления материи
      SpawnBatteryCount = 3;  //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во
      SpawnHealCount = 3;     //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во
      MaxSpawnBattery = 10;    //Макс кол-во Б. которое может заспавнится, ниже менять для каждого уровня 
      MaxSpawnHeal = 10;       //Макс кол-во Х. которое может заспавнится, ниже менять для каждого уровня 
      break;
    }
    case 2: //Второй уровень
    {
      SpawnChanceDef = 10;    //Стандартный шанс появления материи
      SpawnBatteryCount = 3;  //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во
      SpawnHealCount = 3;     //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во
      MaxSpawnBattery = 10;    //Макс кол-во Б. которое может заспавнится, ниже менять для каждого уровня 
      MaxSpawnHeal = 10;       //Макс кол-во Х. которое может заспавнится, ниже менять для каждого уровня 
      break;
    }
    case 3: //Третий уровень
    {
      SpawnChanceDef = 10;    //Стандартный шанс появления материи
      SpawnBatteryCount = 3;  //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во
      SpawnHealCount = 3;     //Гарантированный спавн RandomInt(1,8) 1-минимальное кол-во. 8 макс кол-во
      MaxSpawnBattery = 10;    //Макс кол-во Б. которое может заспавнится, ниже менять для каждого уровня 
      MaxSpawnHeal = 10;       //Макс кол-во Х. которое может заспавнится, ниже менять для каждого уровня 
      break;
    }
  }
  SpawnRandom(Level); 
}
function SpawnRandom(Level) 
{
  SpawnChance = 100 - SpawnChanceDef;
  local spawn = null;
  local timertospawn = 0.0;
  local hcounter = 0;
  local bcounter = 0;
  local t = true;
  if (Level==1)spawn = SpawnPosPosLevelOne;
  else if (Level==2)spawn = SpawnPosPosLevelTwo;
  else if (Level==3)spawn = SpawnPosPosLevelThree;
  
  for (local i=0; i<=SpawnBatteryCount ; i++)
  {
    local randomPos = RandomInt(0,spawn.len()-1);
    if(debag)ScriptPrintMessageChatAll(spawn[randomPos].tostring());
    if(debag)ScriptPrintMessageChatAll("Battery Spawn");
    EntFire("Template_Batterys", "addoutput", "origin "+spawn[randomPos], timertospawn, null);
    EntFire("Template_Batterys", "forcespawn", "", timertospawn+0.1, null);
    timertospawn+=0.1;
    bcounter++;
    spawn.remove(randomPos);
  }

  for (local i=0; i<=SpawnHealCount ; i++)
  {
    local randomPos = RandomInt(0,spawn.len()-1);
    if(debag)ScriptPrintMessageChatAll(spawn[randomPos].tostring());
    if(debag)ScriptPrintMessageChatAll("Heal Spawn");
    EntFire("Template_Heal", "addoutput", "origin "+spawn[randomPos], timertospawn, null);
    EntFire("Template_Heal", "forcespawn", "", timertospawn+0.1, null);
    timertospawn+=0.1;
    hcounter++;
    spawn.remove(randomPos);
  }
  if(debag)ScriptPrintMessageChatAll("Random spawn start");
  for (local i=0; i<=spawn.len()-1;i++)
  {
    if(bcounter <= MaxSpawnBattery || hcounter <= MaxSpawnHeal)
    {
      local randomPos = RandomInt(0,spawn.len()-1);
      local RandomCH = RandomInt(1,100)
      if(debag)ScriptPrintMessageChatAll(RandomCH.tostring()+" == "+SpawnChance.tostring());
      if(SpawnChance <= RandomCH)
      {
        if(debag)ScriptPrintMessageChatAll("true "+spawn[randomPos].tostring());
        if(t)
        {
          if(hcounter <= MaxSpawnHeal)
          {
            hcounter++;
            t=false;
            EntFire("Template_Heal", "addoutput", "origin "+spawn[randomPos], timertospawn, null);
            EntFire("Template_Heal", "forcespawn", "", timertospawn+0.1, null);
            if(debag)ScriptPrintMessageChatAll("Heal Spawn Random");
          }
        }
        else
        {
          if(bcounter <= MaxSpawnBattery)
          {
            bcounter++;
            t=true;
            EntFire("Template_Batterys", "addoutput", "origin "+spawn[randomPos], timertospawn, null);
            EntFire("Template_Batterys", "forcespawn", "", timertospawn+0.1, null);
            if(debag)ScriptPrintMessageChatAll("Batters Spawn Random");  
          }
        }
        if(debag)ScriptPrintMessageChatAll(SpawnChance.tostring());
        timertospawn+=0.1;
        SpawnChance = 100 - SpawnChanceDef;
      }
      else SpawnChance-=MultiChance;
      spawn.remove(randomPos);
    }
    else break;
  }
  if(debag)ScriptPrintMessageChatAll("Batters "+bcounter.tostring()); 
  if(debag)ScriptPrintMessageChatAll("Heals "+hcounter.tostring()); 
  EntFire("Button_heal", "RunScriptCode", "maxitemcounter("+hcounter.tostring()+")", timertospawn+1, null);
  EntFire("Button_lantern", "RunScriptCode", "maxitemcounter("+bcounter.tostring()+")", timertospawn+1, null);
} 
